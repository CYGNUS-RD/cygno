#!/usr/bin/env python3
#
# G. Mazzitelli 2021
#

__version__ = '1.0'

import re
import sys
import os

import numpy as np
import time
import datetime
from optparse import OptionParser
import cygno as cy
import json

##############################
########### Main #############
##############################
def main():
    parser = OptionParser(usage='usage: %prog\t [-ajgv] run number')
    parser.add_option('-a','--all', dest='all', action="store_true", default=False, help='all runs in the mysql DB;');
    parser.add_option('-j','--json', dest='json', action="store_true", default=False, help='json output;');
    parser.add_option('-g','--google', dest='google', action="store_false", default=True, help='old google sheet;');
    parser.add_option('-v','--verbose', dest='verbose', action="store_true", default=False, help='verbose output;');
    (options, args) = parser.parse_args()
    #
    if options.verbose: 
        print(">> resquested arguments:", args)
        print(">> resquested options:", options)
    if options.all:
        db = cy.read_cygno_logbook(sql=options.google, verbose=options.verbose)       
        if options.verbose: print(">> ", db)
        if len(db):
            for index, row in db.iterrows():
                if options.json:
                    print(json.dumps(row.to_json()))          
                else:
                    print (row)
            return 0
        return 1
              
    if len(args) == 1:
        db = cy.run_info_logbook(int(args[0]), sql=options.google, verbose=options.verbose)
        if options.verbose: print(">> ", db)
        if len(db):
            if options.json:
                print(json.dumps(db.to_json()))           
            else:
                for i, column in enumerate(db.columns):
                    print("{column}: {value}".format(column=column, value=db[column].values[0]))
            return 0
        return 1
    else:
        parser.error("run number missing")
        return 1
            
if __name__ == "__main__":
    main()
